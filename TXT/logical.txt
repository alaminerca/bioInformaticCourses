The topic of this
first lesson is logical values and
logical vectors. First of all, a logical value
now is a type of variable that can only store two
values, true or false. We are going to discover
during this week that this is extremely useful. But let's go through an example. Let's have a variable, variable a, that we have
given the value of 2. We are going to ask
questions to this value, is a more than 3? Let's keep on the
first question. What do you think is the
outcome of such a question? The only outcome
is true or false. So, a more than 3, this is false, a more or equal to 3,
this is also false. A less than 3, this is true, a less or equal to 3,
this is also true. We are also observing that
we can ask questions to numerical values and we can store this information
as a logical value. The next one, it's a syntax
that we need to learn, it's a equal to 3? This double equal means, all we`re asking is
are you equal to 3? The answer is, of course, false. The last one is also a syntax
that we need to learn, it's a different than 3? It is. We are learning to ask
questions to values. We also see the outcomes. We learn new syntax, and basically we can also
store these outcomes. Fantastic. But we can
make it even better. We can ask questions
not to single values, but also to vectors. Imagine I want to ask
the same question about the value of three to each of the elements
of this vector. Let me write the same
questions as before. It's a more than 3? Mathematically, this may make no sense because a is a vector
and 3 is a single value. But in the context of r, what we are doing here is to ask to each one of the
elements of the vector, are you more than 3? If we are asking the question to each one of the elements, the outcome should
be also a vector returning the answer to
each one of the elements, so false, true, false, false, true because it`s 2, 4, 1, 3, 6. The next question
that we're asking, are you equal or more than 3? It's basically the
same as before, but it's only affecting
if you exactly have a value of 3,
which it happens. So only this element is
going to be modified. A less than 3 is the same as the first
one, but the reverse. A equal or less than 3, again, only a single value
has been affected. Is a equals to 3? We have only one value
in the vector that is 3. A different than 3, we have all of them except
one to be different than 3. Again, we can ask questions
to each one of the elements. We can get the
outcome as a vector. We can store these
new logical vector, and we can use these
in the future, as we are going to
do in the class. But one more thing. Imagine we have a true as a logical variable and we have another true coming
from different questions, can we combine questions? Is a more than 3
and be less than 4? I mean, can we combine them? Yes, we can operate with logical values. Let's
put an example. A is true because we made a question and
the outcome was true, b is false, c is true. We are going to operate
with those questions. This one, the first one
means a and b needs to be true in order for the statement for this
operation to be true. A is true, but b is false. True and false means
that we get a false. A and c requires a to be
true and c to be true. Both of them are
true, we have a true. The next one is also a syntax
that we need to learn. It's the opposite,
the different way. So if a is true, the opposite to a or not
a, it's basically false. This one is also a
new syntax, a or b. As long as any one
of them is true, the statement is
going to be true. A is true, b is false, a or b, it's going to be true. Again, very powerful. Now what we're going
to do is moving into the coding session, and we're going to
get a bit deeper into those concepts before we start doing some
exercises. Let's go for it.